import java.io.BufferedReader;
import java.io.InputStreamReader;
import java.util.*;

public class abc {
    public static void main(String[] args) throws Exception {
        Solution a2 = new Solution();
        // int[][] arr={{1,0,1,1,1}, {1,0,1,0,1}, {1,0,1,1,1},{1,1,1,0,1},{0,0,0,0,1}};
        // int[][] arr1={{1, 0, 1, 1, 1}, {1, 0, 1, 0, 1}, {1, 0, 1, 1, 1},{1, 1, 1, 0, 0},{0, 0, 0, 1, 1}};
       
        // int[] arr={1,3,2,4,2};
        // int[] arr1={1,3,2,4,2};

        System.out.println(a2.solution());
        // System.out.println(a2.solution("4177252841",4)); 
        // System.out.println(a2.solution("4177252841",4));

       
        
    }   
}


class Solution {
    public int solution() throws Exception{
        int result=0;
        BufferedReader bf = new BufferedReader(new InputStreamReader(System.in));
        StringTokenizer st = new StringTokenizer(bf.readLine());

        int a = Integer.parseInt(st.nextToken());
        int b= Integer.parseInt(st.nextToken());

        boolean[] visit= new boolean[100001];
        visit[a]=true;

        Queue<int[]> que = new LinkedList<>();
        que.add(new int[]{a,0});

        while(!que.isEmpty()){
            int[] now = que.remove();
            
            if(now[0]==b){
                result=now[1];
                break;
            }

            int[] num_list={ now[0]-1, now[0]+1, now[0]*2 };
            for (int i : num_list) {
                if( (0<=i && i<=100000) && !visit[i]){
                    visit[i]=true;
                    que.add(new int[] {i,now[1]+1});
                }
            }
        }


        return result;
    }
}