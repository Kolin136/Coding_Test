from collections import deque


def solution(n, wires):
    graph=[[] for _ in range(n+1)]
    answer=n

    for i in wires:
        a,b=i[0],i[1]
        graph[a].append(b)
        graph[b].append(a)
    
    for a,b in wires:
        graph[a].remove(b)
        graph[b].remove(a)

        check=Bfs(graph,1)
        answer=min(abs(check-(n-check)) , answer)

        graph[a].append(b)
        graph[b].append(a)
        

    return answer

def Bfs(graphs,start):
    visit=[False] * len(graphs)
    que=deque()
    que.append(start)
    visit[start]=True
    count=1

    while que:
        num=que.popleft()
        for i in graphs[num]:
            if not visit[i]:
                visit[i]=True
                que.append(i)
                count+=1

    return count
