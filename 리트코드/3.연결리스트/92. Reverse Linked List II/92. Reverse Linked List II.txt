# Definition for singly-linked list.
# class ListNode:
#     def __init__(self, val=0, next=None):
#         self.val = val
#         self.next = next
class Solution:
    def reverseBetween(self, head: Optional[ListNode], left: int, right: int) -> Optional[ListNode]:
        head_root ,before =head ,None
        if left == right: return head
        for _ in range(left-1):
            before = head
            head = head.next
        
        reverse_first,prev = head,None
        for _ in range(right-left+1):
            next,head.next = head.next,prev
            head,prev = next,head

        reverse_first.next = head
        if left == 1: return prev
        before.next = prev
        
        return head_root
