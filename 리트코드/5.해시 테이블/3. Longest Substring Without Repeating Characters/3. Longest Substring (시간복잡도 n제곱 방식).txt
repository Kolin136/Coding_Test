from collections import defaultdict
class Solution:
    def lengthOfLongestSubstring(self, s: str) -> int:
        char_index_map = defaultdict(int)
        start_idx = 0
        max_len = 0

        for i, char in enumerate(s):
            if char not in char_index_map:
                char_index_map[char] = i
            else:
                max_len = max(max_len, len(char_index_map))
                new_start = char_index_map[char] + 1
                for k in range(start_idx, char_index_map[char] + 1):
                    del char_index_map[s[k]]
                start_idx = new_start
                char_index_map[char] = i

        max_len = max(max_len, len(char_index_map))
        return max_len