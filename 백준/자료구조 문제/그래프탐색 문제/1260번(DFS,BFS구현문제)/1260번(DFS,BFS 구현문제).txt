from collections import deque
N,M,V=map(int,input().split())
graph=[[] for _ in range(N+1)]

for _ in range(M):
    a,b=map(int,input().split())
    graph[a].append(b)
    graph[b].append(a)
    graph[a].sort()
    graph[b].sort()

def DFS(graph,start,visited):
    visited[start] = True
    print(start,end=" ")

    for i in graph[start]:
        if not visited[i]:
            DFS(graph,i,visited)            

def BFS(graph,start,visited):
    que=deque()
    que.append(start)
    visited[start]= True

    while que:
        num = que.popleft()
        print(num,end=" ")
        for i in graph[num]:
            if not visited[i]:
                visited[i]=True
                que.append(i)


visited=[False] * (N+1)
DFS(graph,V,visited)
print("")
visited=[False] * (N+1)
BFS(graph,V,visited)
