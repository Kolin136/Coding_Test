tc=int(input())

def num_sum(num):
    

    dp=[[0 for _ in range(3)] for i in range(num+1)]

    dp[1]=[1,0,0]
    dp[2]=[0,1,0]
    dp[3]=[1,1,1]
    #dp의 0~2인덱스값 의미는 1로 끝났을때의 방법의수 2으로 '' , 3으로'' 뜻하는거

    for i in range(4,num+1):
        # 6일때 만약

        # 5에서 2와 3으로 끝난거에 1 붙이기
        dp[i][0]=dp[i-1][1]+dp[i-1][2]
        # 4에서 1과 3으로 끝난거에 2붙이기
        dp[i][1]=dp[i-2][0]+dp[i-2][2]
        # 3에서 1과 2로 끝난거에 3붙이기
        dp[i][2]=dp[i-3][0]+dp[i-3][1]

    return sum(dp[num])

for i in range(tc):
    n=int(input())
    print(num_sum(n) % 1000000009)

규칙이 있다는데 노가다 아닌이상 어떻게 그 규칙을 찾는지도 인터넷에 설명 안나와있고 맨처음 접근 방법도 왜 이렇게 했는지 안나와 있어서 머르겠다.
규칙은 n번째수일때 방법의 수에서 
1로 시작할땐 n-1번째의 2,3시작할때의 방법의수합
2로 시작할땐 n-2번째의 1,3시작할때의 방법의수합
3로 시작할땐 n-3번째의 1,2시작할때의 방법의수합
이걸 다 더하면 된다한다
